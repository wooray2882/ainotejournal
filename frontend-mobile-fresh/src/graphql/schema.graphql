type Note @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  title: String!
  content: String!
  tags: [String]
  isPinned: Boolean
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
  owner: String
}

type Query {
  listNotes: NoteConnection
  getNote(id: ID!): Note
}

type Mutation {
  createNote(input: CreateNoteInput!): Note
  updateNote(input: UpdateNoteInput!): Note
  deleteNote(input: DeleteNoteInput!): Note
}

type Subscription {
  onCreateNote: Note @aws_subscribe(mutations: ["createNote"])
  onUpdateNote: Note @aws_subscribe(mutations: ["updateNote"])
  onDeleteNote: Note @aws_subscribe(mutations: ["deleteNote"])
}

input CreateNoteInput {
  title: String!
  content: String!
  tags: [String]
  isPinned: Boolean
}

input UpdateNoteInput {
  id: ID!
  title: String
  content: String
  tags: [String]
  isPinned: Boolean
}

input DeleteNoteInput {
  id: ID!
}

type NoteConnection {
  items: [Note]
  nextToken: String
} 